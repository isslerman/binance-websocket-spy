import mockAxios from 'axios';
import getOrderBookSnapshot from '../../../src/lib/services/getOrderBookSnapshot';

describe('getOrderBookSnapshot', () => {
  const resp = {
    data: {
      lastUpdateId: 1450000000,
      bids: [
        [
          '7498.07000000',
          '0.02666500',
        ],
        [
          '7498.06000000',
          '0.22363800',
        ],
        [
          '7497.98000000',
          '2.00000000',
        ],
        [
          '7497.95000000',
          '2.00000000',
        ],
        [
          '7497.92000000',
          '2.00000000',
        ],
        [
          '7497.88000000',
          '2.00000000',
        ],
        [
          '7497.83000000',
          '2.00000000',
        ],
        [
          '7497.79000000',
          '2.00000000',
        ],
        [
          '7496.45000000',
          '0.03000000',
        ],
        [
          '7496.44000000',
          '0.20000000',
        ],
      ],
      asks: [
        [
          '7500.42000000',
          '2.00000000',
        ],
        [
          '7500.43000000',
          '1.85782800',
        ],
        [
          '7500.44000000',
          '2.00000000',
        ],
        [
          '7500.45000000',
          '2.50000000',
        ],
        [
          '7500.46000000',
          '1.30193900',
        ],
        [
          '7500.47000000',
          '2.00000000',
        ],
        [
          '7500.48000000',
          '2.00000000',
        ],
        [
          '7500.52000000',
          '2.00000000',
        ],
        [
          '7500.54000000',
          '2.00000000',
        ],
        [
          '7500.61000000',
          '9.84049200',
        ],
      ],
    },
  };

  beforeEach(() => {
    mockAxios.get.mockImplementationOnce(() => Promise.resolve(resp));
  });

  it('should return orderbook snapshot data', async () => {
    await expect(getOrderBookSnapshot('BTCUSDT')).resolves.toEqual(resp.data);
  });
});
